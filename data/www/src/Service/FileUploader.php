<?php
// src/Service/FileUploader.php
namespace App\Service;

use Symfony\Component\HttpFoundation\File\Exception\FileException;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use Symfony\Component\String\Slugger\SluggerInterface;

class FileUploader
{
    private $targetDirectory;
    private $slugger; 

    public $allowedTypes = [
        'image/png' => 'png',
        'image/jpeg' => 'jpg', 
        'image/jpeg' => 'jpeg'
     ];


    public function __construct($targetDirectory, SluggerInterface $slugger)
    {
        $this->targetDirectory = $targetDirectory;
        $this->slugger = $slugger;
    }

    public function upload(UploadedFile $file, $path)
    { 
        $verifyimg = getimagesize($file);

        if($verifyimg['mime'] != ('image/png' || 'image/jpg' || 'image/jpeg')) {
            echo "Only PNG, JPEG or JPG images are allowed!";
            exit;
        }
        
        $originalFilename = basename($file); 
        $safeFilename = $this->slugger->slug($originalFilename);
        $fileName = $safeFilename.'-'.uniqid().'.'.$file->guessExtension();

        try {
            $file->move($path, $fileName);
        } catch (FileException $e) {
            echo $e; 
        } 
        return $fileName;
    }

    public function getTargetDirectory()
    {
        return $this->targetDirectory;
    }
}


//$originalFilename = pathinfo($file->getClientOriginalName(), PATHINFO_FILENAME);


// $extension = $file->guessExtension(); 

// if (!in_array($extension, array_keys([
//     'image/png' => 'png',
//     'image/jpeg' => 'jpg', 
//     'image/jpeg' => 'jpeg'
//  ]))) {
//     die("File not allowed.");
// }
