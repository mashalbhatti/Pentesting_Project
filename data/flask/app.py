from flask import Flask, jsonify, request
import mysql.connector
from mysql.connector import errorcode
import json
import sys
app = Flask(__name__)

config = {
        'user': 'mark',
        'password': 'Tk3lPougqvUasAo8VGpPLaN2*',
        'host': 'chall-mysql',
        'port': '3306',
        'database': 'db_public'
    }

def make_connection():
    try:
        connection = mysql.connector.connect(**config)
    except mysql.connector.Error as err:
        if err.errno == errorcode.ER_ACCESS_DENIED_ERROR:
            print("Something is wrong with your user name or password")
        elif err.errno == errorcode.ER_BAD_DB_ERROR:
            print("Database does not exist")
        else:
            print(err)
    return connection


@app.route('/seacreatures')
def sea_creatures():
    connection = make_connection()
    mycursor = connection.cursor()

    sql = "SELECT id, creature_name, creature_description, creature_image, creature_depth FROM creature ORDER BY creature_depth"

    mycursor.execute(sql)
    columns = mycursor.description 
    result = [{columns[index][0]:column for index, column in enumerate(value)} for value in mycursor.fetchall()]
    connection.close()
    return json.dumps(result)

@app.route('/seacreature/<creature_id>')
def sea_creature(creature_id):
    connection = make_connection()
    mycursor = connection.cursor()

    sql = "SELECT id, creature_name, creature_description, creature_image, creature_depth FROM creature WHERE id=" + creature_id

    mycursor.execute(sql)
    columns = mycursor.description 
    result = [{columns[index][0]:column for index, column in enumerate(value)} for value in mycursor.fetchall()]
    connection.close()
    return json.dumps(result)

@app.route('/seacreature/<creature_id>/delete')
def delete_sea_creature(creature_id):
    connection = make_connection()
    mycursor = connection.cursor()

    sql = "DELETE FROM creature WHERE id=" + creature_id
    
    mycursor.execute(sql)
    connection.commit()
    connection.close()
    return 'success'

@app.route('/seacreature/<creature_id>/edit', methods=['GET', 'POST'])
def update_sea_creature(creature_id):
    print(request.json, file=sys.stderr)
    content = request.json
    connection = make_connection()
    mycursor = connection.cursor()
    sql = "UPDATE creature SET creature_name=%s, creature_description=%s, creature_image=%s, creature_depth=%s WHERE id=%s"
    data=(content['creature_name'], content['creature_description'], content['creature_image'], content['creature_depth'], creature_id)
    print(data, file=sys.stderr)
    mycursor.execute(sql, data)
    connection.commit()
    connection.close()
    return 'success'

@app.route('/seacreature/add', methods=['GET', 'POST'])
def add_sea_creature():
    content = request.json
    connection = make_connection()
    mycursor = connection.cursor()
    sql = "INSERT INTO creature (creature_name, creature_description, creature_image, creature_depth) VALUES (%s, %s, %s, %s)"
    data=(content['creature_name'], content['creature_description'], content['creature_image'], content['creature_depth'])
    mycursor.execute(sql, data)
    connection.commit()
    connection.close()
    return 'success'

    

if __name__ == '__main__':
    app.run(debug=True, host='0.0.0.0', port=5001)
